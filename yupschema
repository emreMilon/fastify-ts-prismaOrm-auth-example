const yupOptions = {
    strict: false,
    abortEarly: false, // return all errors
    stripUnknown: true, // remove additional properties
    recursive: true
  }



const yupBodySchema = yup?.object().shape({
  userId: yup
    .string()
    .required("Please add your user ID")
    .matches(/^[0-9]+$/, "Must be only digits")
    .min(5, "Must be exactly 5 digits")
    .max(5, "Must be exactly 5 digits"),
  firstName: yup
    .string()
    .required("Name is required")
    .min(3, "Must be more than 3 characters")
    .max(30, "Must be less than 30 characters"),
  lastName: yup
    .string()
    .required("Surname is required")
    .min(3, "Must be more than 3 characters")
    .max(30, "Must be less than 30 characters"),
  position: yup.string().required("Please select a position"),
  email: yup
    .string()
    .email("Invalid Email")
    .required("Email is required!!")
    .min(2, "Must be more than 2 characters")
    .max(300, "Must be less than 300 characters"),
  password: yup
    .string()
    .required("No password provided.")
    .max(150)
    .min(8, "Password is too short - should be 8 chars minimum. "),
});

interface User extends Asserts<typeof yupBodySchema> {}
const validated : User = yupBodySchema?.validateSync(User)